name: build
on: [push, pull_request]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: goshort
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:

      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Set up path
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: |
          go mod download
          go mod verify
          go get golang.org/x/tools/cmd/cover
          go get github.com/mattn/goveralls
          go get golang.org/x/lint/golint

      - name: Run go lint
        run: make lint

      - name: Build
        run: make build

      - name: Test
        env:
          APP_DSN: postgres://127.0.0.1:${{ job.services.postgres.ports[5432] }}/goshort?sslmode=disable&user=postgres&password=postgres
        run: |
          make migrate
          make test-cover

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage-all.out
